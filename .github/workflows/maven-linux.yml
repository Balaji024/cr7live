# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java WAR Deployed on Tomcat

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: Linux
    steps:
    
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run:  mvn -B clean package
      #run: id

  deploy:
    runs-on: Linux
    env:
      targetPath: "/opt/tomcat/webapps"
      warFileName: "cr7live.war"
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [build]
    steps:
      
    - name: Stop Tomcat
      run: sudo systemctl stop tomcat && sleep 15
      
    - name: Copy War
      run: cp ./target/*.war /opt/tomcat/webapps/cr7live.war
      
    - name: is file copied ?
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: /opt/tomcat/webapps/cr7live.war
        allow_failure: true

    - name: Start Tomcat
      run: sudo systemctl start tomcat && sleep 10
      
    - name: Smoke Test
      run: |
       response=$(curl -I http://localhost:8080/cr7live/ | grep HTTP | cut -d " " -f 2)
       if [ "$response" == 200 ]
       then 
         echo "App is up and running"
       else
         echo "App is down"
         exit 1	
       fi
      
      
    
      
     
